openapi: 3.0.0
info:
  title: OTrace Services
  version: '0.4'
  description: "# Introduction\n\nIn order to improve trust in the open banking ecosystem, this work proposes a\nprotocol for *traceability*---the ability for consumers to track how data\nis being used and shared, even (and especially) across organizational\nboundaries. Traceability will help achieve reliable, scalable detection of data\nmisuse, leading to both better internal processes and more effective\nintervention by enforcement authorities when necessary.\n\nThe main participants in the open banking ecosystem are:\n1. *Consumers.* Individuals who want to use digital financial services.\n2. *Data providers.* Companies (e.g., traditional banks, payment providers,\n   credit card providers) that hold consumer financial data.\n3. *Data recipients.* Companies (e.g., fintechs, payment processors, credit\n   reference agencies, regulators) that use consumer financial data to provide\n   requested services.\n4. *Data access platforms.* Intermediaries (e.g., API providers, data\n   aggregators) that support data exchange between data providers and data\n   recipients.\n\nTo facilitate traceability, we introduce the idea of a *traceability\nservice*, which stores traceability information on behalf of\nconsumers. Traceability services have three deployment models:\n\n1. *Self-hosted.* Consumers self-host traceability services on their personal\n   machines or in the cloud.\n2. *Third-party-hosted.* Third-party providers (e.g., nongovernmental\n   organizations, private companies) host traceability services.\n3. *Provider-hosted.* Data providers host traceability services (given their\n   existing trust relationships with consumers).\n\nThese traceability services will record various types of traceability *attestations*:\n\n1. *Policy attestations.* These describe agreed-upon terms of *granular*\n   consent, delineating the relevant data types, their intended usage, the\n   duration of data retention, the conditions under which data may be reshared,\n   and logging requirements.\n2. *Sharing attestations.* These describe sharing actions on data elements\n   includes information, such as the timestamps and purposes of sharing.\n3. *Activity attestations.* These describe local actions on data elements (e.g.,\n   use, deletion) and includes information, such as the timestamps and purposes\n   of the actions.\n4. *Rights attestations.* These describe actions associated with data rights\n   requests, such as consent grant, consent revocation, data access, data\n   correction, and data deletion.\n   \nA traceability protocol is comprised of several subprotocols:\n\n1. *Traceability setup.* This is a three-party protocol, involving a consumer,\n    data controller (i.e., a data provider or a data recipient), and\n    traceability service. The consumer authorizes the controller to interact\n    with the traceability service on its behalf. Concretely, this can be\n    implemented using OAuth, where the controller (either a data provider or a\n    data recipient) is an OAuth client and the traceability service acts as the\n    authorization and resource servers.\n2. *Data sharing setup.* This is a four-party protocol, involving a consumer,\n\tdata provider, data recipient, and traceability service. The consumer\n\tinitiates data sharing between the provider and the recipient (e.g., using\n\tthe FDX protocol), and the recipient and provider both post consent records\n\tto the traceability service.\n3. *Data sharing.* This is a three-party protocol, involving a data provider,\n   data recipient, and traceability service. The recipient requests data from the\n   provider (e.g., using the FDX protocol), and receives the data and a \"consentID\"\n   in return. Finally, the recipient and provider both post sharing attestations to\n   the traceability service.\n4. *Data use.* This is a two-party protocol, involving a data controller and\n   traceability service. The controller posts an activity attestation to the\n   traceability service.\n5. *Consumer rights request.* This is a three-party protocol, involving a\n   consumer, controller, and traceability service based on the Data Rights\n   Protocol (DRP). The consumer initiates a rights request with the traceability\n   service, which forwards the request to the controller. The controller posts a\n   rights attestation to the traceability service.\n\n\n# Terms and Definitions\n\n| Terms | Definition |\n|-------|------------|\n| JWS  | [JSON Web Signature](https://datatracker.ietf.org/doc/rfc7797/) |\n| JWT  | [JSON Web Token](https://datatracker.ietf.org/doc/html/rfc7519) |\n| OAuth | [OAuth](https://datatracker.ietf.org/doc/html/rfc6749) |\n| FDX   | [FDX](https://financialdataexchange.org/) |\n| PKI   | [PKI](https://csrc.nist.gov/glossary/term/public_key_infrastructure) |\n| mTLS  | [mTLS](https://datatracker.ietf.org/doc/html/rfc5246) |\n| HTTP  | [HTTP](https://datatracker.ietf.org/doc/html/rfc7231) |\n\n# Change History\n\n| Version | Description | Date | Author |\n|-------|------------|------------|------------|\n| **0.1** | Initital Verision                             | 3/17/2024 | Dean Wen   | \n| **0.2** | Updated Introduction                          | 3/30/2024 | Kevin Liao | \n| **0.3** | Added user dashboard and violation notify API | 4/12/2024 | Dean Wen   |\n| **0.4** | Revised consents and data APIs, de-scope migration APIs | 5/12/2024 | Dean Wen   | "
  contact:
    name: MIT Internet Policy Research Initiative
    url: 'https://internetpolicy.mit.edu'
    email: ipri-contact@mit.edu
  license:
    name: MIT License
    url: 'https://mit-license.org'
servers:
  - url: 'http://localhost:3000'
paths:
  /1/1/create-consent:
    post:
      summary: Create Consent
      operationId: post-1-1-policy
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  trace_id:
                    type: string
                    description: 'The uuid, generated by the Traceability Server to uniquely identify the Traceability Policy Record and any related subsequent records under this pol- icy, MUST be unique to this Traceability Record Set.'
                required:
                  - trace_id
              examples:
                example:
                  value:
                    trace_id: 475eb7d8-dec4-49f4-a5b6-3d76aebb2213
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                timestamp:
                  type: string
                  description: 'Timestamp indicating when the consent creation request was created by the sender. It is expressed as a JSON number, representing the total number of seconds from 1970-01-01T00:00:00Z, measured in UTC up to the specific date and time.'
                data_subject:
                  type: string
                  description: 'The WebID, which identifies the User who owns the data relevant to this policy. This identifier MUST be unique to the User in relation to the Data Provider and SHOULD NOT reveal any sensitive information to viewers.'
                description:
                  type: string
                  description: 'A summary describes the relevant data categories and the purpose of the consent, as presented to the User at the time of acknowledgment.'
                consents:
                  type: array
                  description: A JSON structure detailing the data categories covered by the User’s consent and the permitted uses for each category. The available consents SHOULD provide granularity in the options for consent.
                  items:
                    $ref: '#/components/schemas/consent'
                parent_ids:
                  type: string
                  description: A JSON array containing trace_ids from other existing Traceability Policy Records derives this consent.
                provider_challenge:
                  type: string
                  description: |
                    Proof Key for Code Exchange. The value is the base64url encoding of the SHA-256 hash of the public key from the Data Provider’s Traceability Key-pair.
                provider_challenge_method:
                  type: string
                  description: 'Value MUST be set to "TB-S256"'
                recipient_challenge:
                  type: string
                  description: |
                    Proof Key for Code Exchange. The value is the base64url encoding of the SHA-256 hash of the public key from the Data Recipient’s Traceability Key-pair
                recipient_challenge_method:
                  type: string
                  description: 'Value MUST be set to "TB-S256"'
                trace_uri:
                  type: string
                  description: A URI identifying the Traceability Server for this consent.
                trace_cert:
                  type: string
                  description: The base64url-encoded certificate issued by predefined trusted Certifcate Authoriy(CA) identifies Data Provider.
              required:
                - timestamp
                - data_subject
                - description
                - consents
                - provider_challenge
                - provider_challenge_method
                - recipient_challenge
                - recipient_challenge_method
                - trace_uri
                - trace_cert
            examples:
              example:
                value:
                  timestamp: '2024-01-01T0:0:0Z'
                  data_subject: '168000099'
                  description: User Contact Sharing
                  consents:
                    - category: user.contact
                      uses: marketing.communications
                      subject: anonymous_user
                    - category: user.demographic
                      uses: marketing.advertising
                      subject: anonymous_user
                  parent_ids:
                    - 6e9c599f-5676-46d7-809f-70f9bffed436
                    - c780a86d-f902-4801-bdad-c9b14b2a8032
                  provider_challenge: aGVsbG8gd29ybGQ=
                  provider_challenge_method: TB-S256
                  recipient_challenge: aGVsbG8gd29ybGQ=
                  recipient_challenge_method: TB-S256
                  trace_uri: 'https://tracer.com/aGVsbG8'
                  trace_cert: '-----BEGIN CERTIFICATE-----MIICMzCCAZygAwIBAgIJALiPnVsvq8dsMA0GCSqGSIb3DQEBBQUAMFMxCzAJBgNVBAYTAlVTMQwwCgYDVQQIEwNm-----END CERTIFICATE-----'
        description: ''
      tags:
        - Consent
      description: 'User to initiate data sharing with a Data Provider on behalf of a Data Recipient, the User MUST have independent relationships with both the Data Recipient and the Data Provider. The User MUST initiate the consent request from within the Data Recipient’s experience/application. Before beginning the consent request, the Data Recipient determines the types of data access it intends to access from Data Provider and MUST disclose its intent to the User. '
    parameters: []
  /1/1/share-data:
    post:
      summary: Share Data
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
      operationId: post-1-1-share
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                trace_id:
                  type: string
                  description: 'The uuid, generated by the Traceability Server to uniquely identify the Traceability Policy Record and any related subsequent records under this policy, MUST be unique to this Traceability Record Set.'
                timestamp:
                  type: string
                  description: 'Timestamp indicating when the data sharing re- quest was created by the sender. It is expressed as a JSON number, representing the total number of seconds from 1970-01-01T00:00:00Z, measured in UTC up to the specific date and time.'
                data_shared:
                  type: array
                  description: A JSON structure detailing the data categories that the shared data falls within.
                  items:
                    $ref: '#/components/schemas/consent'
                description:
                  type: string
                  description: A summary describes the relevant data categories and the purpose of the usage at the time of data operation.
              required:
                - trace_id
                - timestamp
                - data_shared
                - description
            examples:
              example:
                value:
                  trace_id: 475eb7d8-dec4-49f4-a5b6-3d76aebb2213
                  timestamp: '2024-01-01T0:0:0Z'
                  description: User Contact Sharing
                  data_shared:
                    - category: user.contact
                      uses: marketing.communications
                      subject: anonymous_user
                    - category: user.demographic
                      uses: marketing.advertising
                      subject: anonymous_user
      tags:
        - Data
      description: 'This endpoint should be invoked by the Data Provider, with whom the User has an existing relationship. It shall be triggered by any data sharing activity from Data Provider to Data Recipient systems in terms of customer’s data that previously established traceablity policy in this OTrace service.'
    parameters: []
  /1/1/use-data:
    post:
      summary: Use Data
      responses:
        '201':
          description: Created
        '400':
          description: ''
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
      operationId: post-1-1-usage
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                trace_id:
                  type: string
                  description: 'The uuid, generated by the Traceability Server to uniquely identify the Traceability Policy Record and any related subsequent records under this policy, MUST be unique to this Traceability Record Set.'
                timestamp:
                  type: string
                  description: 'Timestamp indicating when the data sharing re- quest was created by the sender. It is expressed as a JSON number, representing the total number of seconds from 1970-01-01T00:00:00Z, measured in UTC up to the specific date and time.'
                data_used:
                  type: array
                  description: A JSON structure detailing the data categories that the used data falls within and what data uses are taking place upon each data category.
                  items:
                    $ref: '#/components/schemas/consent'
                description:
                  type: string
                  description: A summary describes the relevant data categories and the purpose of the usage at the time of data operation.
              required:
                - trace_id
                - timestamp
                - data_used
                - description
            examples:
              example:
                value:
                  trace_id: 475eb7d8-dec4-49f4-a5b6-3d76aebb2213
                  timestamp: '2024-01-01T0:0:0Z'
                  description: Data Usage
                  data_used:
                    - category: user.contact
                      uses: marketing.communications
                      subject: anonymous_user
                    - category: user.demographic
                      uses: marketing.advertising
                      subject: anonymous_user
        description: ''
      tags:
        - Data
      description: |
        This endpoint should be invoked by the Data Provider and/or Data Recipient, with whom the User has an existing relationship. It shall be triggered by any operations or utilization within Data Provider/Data Recipient systems in terms of customer’s data that previously established traceablity policy in this OTrace service.
    parameters: []
  /1/1/delete-consent:
    post:
      summary: Delete Consent
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
      operationId: get-1-1-delete
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                trace_id:
                  type: string
                  description: 'The uuid, generated by the Traceability Server to uniquely identify the Traceability Policy Record and any related subsequent records under this policy, MUST be unique to this Traceability Record Set.'
              required:
                - trace_id
            examples:
              example:
                value:
                  trace_id: 475eb7d8-dec4-49f4-a5b6-3d76aebb2213
      tags:
        - Consent
    parameters: []
  /1/1/change-consent:
    post:
      summary: Change Consent
      operationId: post-1-1-update
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              'null':
                type: string
                description: A JSON array of trace_ids of other Traceability Policy Records that this Traceability Policy Record derives consent from.
              properties:
                trace_id:
                  type: string
                  description: 'The existing trace_id. The uuid, generated by the Traceability Server to uniquely identify the Traceabil- ity Policy Record and any related subsequent records under this policy, MUST be unique to this Traceability Record Set.'
                description:
                  type: string
                  description: 'A summary describes the relevant data categories and the purpose of the consent, as presented to the User at the time of acknowledgment."'
                consents:
                  type: array
                  description: The new consents. A JSON structure detailing the data categories covered by the User’s consent and the per- mitted uses for each category. The available consents SHOULD provide granularity in the options for consent.
                  items:
                    $ref: '#/components/schemas/consent'
              required:
                - trace_id
                - description
                - consents
            examples:
              example:
                value:
                  trace_id: 475eb7d8-dec4-49f4-a5b6-3d76aebb2213
                  description: Remove marketing.communications
                  consents:
                    - category: user.demographic
                      uses: marketing.advertising
                      subject: anonymous_user
      tags:
        - Consent
    parameters: []
  /1/1/user-dashboard:
    post:
      summary: User Dashboard
      operationId: post-1-1-user-dashboard
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data_consents:
                    type: array
                    description: A completed list of all consents
                    items:
                      allOf:
                        - $ref: '#/components/schemas/record'
                        - type: object
                          properties:
                            consents:
                              type: array
                              description: A list of all consents created
                              items:
                                $ref: '#/components/schemas/consent'
                          required:
                            - consents
                  data_usage:
                    type: array
                    description: A completed list of all data usages for given user. Optional if no data used yet.
                    items:
                      allOf:
                        - $ref: '#/components/schemas/record'
                        - type: object
                          properties:
                            usage:
                              type: array
                              description: A list of data use events
                              items:
                                $ref: '#/components/schemas/consent'
                          required:
                            - usage
                  data_sharing:
                    type: array
                    description: A completed list of all data shared for given user. Optional if no data shared yet.
                    items:
                      allOf:
                        - $ref: '#/components/schemas/record'
                        - type: object
                          properties:
                            shared:
                              type: array
                              description: A list of data sharing events
                              items:
                                $ref: '#/components/schemas/consent'
                          required:
                            - shared
                  data_violation:
                    type: array
                    description: A completed list of all data violation for given user. Optional if no data violated yet.
                    items:
                      allOf:
                        - $ref: '#/components/schemas/record'
                        - type: object
                          properties:
                            violations:
                              type: array
                              description: A list of data violation events.
                              items:
                                $ref: '#/components/schemas/consent'
                          required:
                            - violations
                required:
                  - data_consents
              examples:
                example:
                  value:
                    data_consents:
                      - trace_id: 475eb7d8-dec4-49f4-a5b6-3d76aebb2213
                        timestamp: '2024-01-01T0:0:0Z'
                        description: Consent User Contact Sharing
                        consents:
                          - category: user.contact
                            uses: marketing.communications
                            subject: anonymous_user
                    data_usage:
                      - trace_id: 475eb7d8-dec4-49f4-a5b6-3d76aebb5865
                        timestamp: '2024-01-01T0:0:0Z'
                        description: Internal Data Analytics
                        usages:
                          - category: user.demographic
                            uses: marketing.advertising
                            subject: anonymous_user
                    data_sharing:
                      - trace_id: 475eb7d8-dec4-49f4-a5b6-3d76aebb5865
                        timestamp: '2024-01-01T0:0:0Z'
                        description: Share User Demographic
                        shares:
                          - category: user.demographic
                            uses: marketing.advertising
                            subject: anonymous_user
                    data_violations:
                      - trace_id: 475eb7d8-dec4-49f4-a5b6-3d76aebb5865
                        timestamp: '2024-01-01T0:0:0Z'
                        description: Violated User Demographic Usage
                        violations:
                          - category: user.demographic
                            uses: ai.training
                            subject: anonymous_user
            application/xml:
              schema:
                type: object
                properties: {}
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                data_subject:
                  type: string
                  description: 'The WebID, which identifies the User who owns the data relevant to this policy. This identifier MUST be unique to the User in relation to the Data Provider and SHOULD NOT reveal any sen- sitive information to viewers.'
              required:
                - data_subject
            examples:
              example:
                value:
                  data_subject: 3d76aebb5865
      tags:
        - Data
      description: |
        This endpoint should be invoked by the User directly from OTrace User Interfaces. It indicates user would fetch all consents, data usages, and data violation detected related to User’s data. The User MUST initiate this request after proper User authentication like username/password challenges, etc.
    parameters: []
  /1/1/notify-violation:
    post:
      summary: Notify Violation
      operationId: post-1-1-notify-violation
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                allOf:
                  - $ref: '#/components/schemas/record'
                  - type: object
                    properties:
                      violations:
                        type: array
                        description: A list of data violations events
                        items:
                          $ref: '#/components/schemas/consent'
                    required:
                      - violations
            examples:
              example:
                value:
                  - trace_id: 475eb7d8-dec4-49f4-a5b6-3d76aebb5865
                    timestamp: '2024-01-01T0:0:0Z'
                    description: Violated␣User␣Demographic␣Usage
                    violations:
                      - category: user.demographic
                        uses: ai.training
                        subject: anonymous_user
      tags:
        - Data
      description: |
        This endpoint should be implemented by both Data Recipient and Data Provider, and invoked by the OTrace Service. It indicates OTrace Service detected one or more data violation activities occured on existing consents. The recipient of this notification must acknowledge the request by sending a response signed by its signing key for the proof of delivery. The notification shall trigger data cleaning and remediation procedures in violation parties system.
  /1/1/health-check:
    get:
      summary: Health Check
      operationId: get-1-1-health-check
      responses:
        '200':
          description: OK - Service is healthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: Status of the service
                    enum:
                      - healthy
                      - degraded
                      - down
                  timestamp:
                    type: string
                    description: ISO 8601 timestamp indicating the time of the health check
              examples:
                example:
                  value:
                    status: healthy
                    timestamp: '2024-12-09T12:00:00Z'
        '503':
          description: Service Unavailable
      tags:
        - Health
      description: |
        This endpoint can be used to check the operational health of the OTrace service. It returns a simple status indicating whether the service is operational, degraded, or down.
components:
  schemas:
    consent:
      title: consent
      type: object
      properties:
        category:
          type: string
          description: "Data Categories are labels to describe the type of data processed. Data Category objects form a hierarchy: A Data Category can contain any number of children, but a given Category may only have one parent. a child Category can be assigned to a parent by setting the child's parent_key property. For example, the user.job_title Category is used for personally-identifiable job title information for a user. For more information, https://ethyca.github.io/fideslang/taxonomy/data_categories/"
        uses:
          type: string
          description: |-
            Data Use is a label that denotes the way data is used: "Advertising, Marketing or Promotion", "First Party Advertising", and "Sharing for Legal Obligation", as examples.

            Data Use objects form a hierarchy: A Data Use can contain any number of children, but a given Data Use may only have one parent. A child Data Use can be assigned to a parent by setting the child's parent_key property. For example, the third_party_sharing.personalized_advertising For more information, https://ethyca.github.io/fideslang/taxonomy/data_uses/
        subject:
          type: string
          description: 'Data Subject are the group of labels commonly assigned to describe the type of system users to whom data may belong or is being processed. Examples might be customers, patients or simply abstract users. For more information, https://ethyca.github.io/fideslang/taxonomy/data_subjects/'
      required:
        - category
        - uses
        - subject
    record:
      title: record_common
      type: object
      properties:
        trace_id:
          type: string
          description: 'The uuid, generated by the Traceability Server to uniquely identify the Traceability Policy Record and any related subsequent records under this pol- icy, MUST be unique to this Traceability Record Set.'
        timestamp:
          type: string
          description: 'Timestamp indicating when the consent creation request was cre- ated by the sender. It is expressed as a JSON number, representing the total number of seconds from 1970-01-01T00:00:00Z, measured in UTC up to the specific date and time.'
        description:
          type: string
          description: 'A summary describes the relevant data categories and the purpose of the consent, as presented to the User at the time of acknowledgment.'
      required:
        - trace_id
        - timestamp
        - description
  securitySchemes:
    JWT:
      type: http
      scheme: bearer
